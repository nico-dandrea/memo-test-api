"DEFINITION"

type MemoTest {
  id: ID!
  name: String!
  images: [MemoTestImage!]! @hasMany
  sessions: [GameSession!]! @hasMany
  created_at: DateTime!
  updated_at: DateTime!
}

type MemoTestImage {
  id: ID!
  image_url: String!
  memo_test: MemoTest! @belongsTo
  created_at: DateTime!
  updated_at: DateTime!
}

"CREATE"

input CreateMemoTestInput {
  name: String!
  images: UpdateImagesHasMany!
}

input CreateImageHasMany {
  create: [CreateImageInput!]!
}

input CreateImageInput {
  image_url: String!
}

"UPDATE"

input UpdateMemoTestInput {
  id: ID!
  name: String
  images: UpdateImagesHasMany
}

input UpdateImagesHasMany {
  create: [CreateImageInput!]
  update: [UpdateImageInput!]
  upsert: [UpsertImageInput!]
  delete: [ID!]
  connect: [ID!]
  disconnect: [ID!]  
}

input UpdateImageInput {
  id: ID!
  image_url: String
}

input UpsertImageInput {
  id: ID!
  image_url: String
}

"DELETE"

input DeleteImageInput {
  id: ID!
}